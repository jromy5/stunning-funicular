---
classes:
  - apache
  - apache::mod::wsgi
  - blocky
  - memcached
  - python
  - reviews_asf
  - ssl::name::wildcard_apache_org
  - vcsrepo_asf
  - vhosts_asf::vhosts
  - zmanda_asf::client

apache::default_vhost: false
apache::default_ssl_cert: '/etc/ssl/certs/wildcard.apache.org.crt'
apache::default_ssl_chain: '/etc/ssl/certs/wildcard.apache.org.chain'
apache::default_ssl_key: '/etc/ssl/private/wildcard.apache.org.key'

base::basepackages:
  - patch
  - libmysqlclient-dev
  - cvs
  - git-core
  - python-svn
  - procmail

logrotate::rule:
  apache2:
    ensure: 'present'

memcached::max_memory: '10%'
memcached::listen_ip: '127.0.0.1'
memcached::tcp_port: '11211'

python::version: 'system'
python::pip: true
python::dev: true
python::virtualenv: true
python::gunicorn: false
python::manage_gunicorn: false

python::python_pips:
  mysql-python:
    ensure: present
  ReviewBoard:
    ensure: present
  django-storage-swift:
    ensure: present

postfix::server::inet_interfaces: 'all'
postfix::server::mailbox_command: '/usr/bin/procmail -a "$EXTENSION"'
postfix::server::myhostname: 'reviews.apache.org'
postfix::server::mydestination: 'reviews.apache.org, reviews-vm2.apache.org, localhost.apache.org, localhost'

vhosts_asf::vhosts::vhosts:
  reviews_http:
    vhost_name: '*'
    port: 80
    docroot: '/var/www/html'
    servername: "%{reviews_asf::rbhost}"
    redirect_source: 
      '/'
    redirect_dest: 
      "https://%{reviews_asf::rbhost}"
    redirect_status: 
      'permanent'

  reviews_https:
    vhost_name: '*'
    port: 443
    ssl: true
    ssl_cert: '/etc/ssl/certs/wildcard.apache.org.crt'
    ssl_chain: '/etc/ssl/certs/wildcard.apache.org.chain'
    ssl_key: '/etc/ssl/private/wildcard.apache.org.key'
    servername: "%{reviews_asf::rbhost}"
    default_vhost: true
    docroot: "%{reviews_asf::rbhome}/htdocs"
    manage_docroot: false
    wsgi_pass_authorization: 'on'
    wsgi_script_aliases:
      /:
        "/%{reviews_asf::rbhome}/htdocs/reviewboard.wsgi"
    aliases:
      -
        alias: '/static'
        path: "%{reviews_asf::rbhome}/htdocs/static"
      -
        alias: '/media'
        path: "%{reviews_asf::rbhome}/htdocs/media"
      -
        alias: '/errordocs'
        path: '%{reviews_asf::rbhome}/htdocs/errordocs'
      -
        alias: '/robots.txt'
        path: '%{reviews_asf::rbhome}/htdocs/robots.txt'
    directories:
      - 
        path: '/htdocs'
        provider: 'directory'
        allow_override:
          - all
      - 
        path: '/conf'
        provider: 'directory'
        allow_override:
          - all
      - 
        path: '/robots.txt'
        provider: 'location'
        sethandler: 'none'
      - 
        path: '/errordocs'
        provider: 'location'
        sethandler: 'none'
      - 
        path: '/static'
        provider: 'location'
        sethandler: 'none'
      - 
        path: '/admin_media'
        provider: 'location'
        sethandler: 'none'
      -
        path: '/media'
        provider: 'location'
        sethandler: 'none'
      - 
        path: '/media/uploaded'
        provider: 'location'
        sethandler: 'none'
        options: 'none'
        custom_fragment: 'AddType text/plain .html .htm .shtml .php .php3 .php4 .php5 .phps .asp .pl .py .fcgi .cgi .phtml .phtm .pht .jsp .sh .rb'
    custom_fragment: |
      # Deny access to cgi-bin (which isn't a thing!)
      <Location /cgi-bin/>
        Require all denied
      </Location>
      # Deny access to badly configured clients
      <If "%%{}{HTTP_HOST} == '209.188.14.164'">
        Require all denied
      </If>


cron:
  update-git-clones:
    user: 'reviewboard'
    minute: '*/30'
    command: '/home/reviewboard/update_git_clones.sh > /dev/null 2>&1'
