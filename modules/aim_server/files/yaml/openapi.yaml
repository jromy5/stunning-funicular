
# THIS IS PULLED FROM SCRIPTS AND AUTOGENERATED!
# Please use openapi/combine.py to regenerate!
openapi: 3.0.0
info:
  version: 1.0.0
  description: This is the API specifications for interacting with the AIM UI.
  title: AIM API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
components:
  schemas:
    ActionCompleted:
      properties:
        message:
          description: Acknowledgement message
          example: Action completed
          type: string
      required:
      - message
    Empty:
      properties:
        id:
          description: optional object ID
          type: string
        page:
          description: optional page id
          type: string
      required: []
    Error:
      properties:
        code:
          description: HTTP Error Code
          example: 403
          format: int16
          type: integer
        reason:
          description: Human readable error message
          example: You need to be logged in to view this endpoint!
          type: string
      required:
      - code
      - reason
    MailingListConfiguration:
      properties:
        domain:
          description: The (sub) domain part of the list to be modified
          example: kibble
          type: string
        listname:
          description: The list name part of the mailing list
          example: kibble
          type: string
        moderators:
          description: The current moderators of the list
          example:
          - foo@bar
          - bar@baz
          type: object
        project:
          description: The TLP ID
          example: kibble
          type: string
        type:
          description: The PubSub type (git/svn) in use
          example: git
          type: string
      required:
      - domain
      - type
      - project
      - listname
      - moderators
    PubSubConfiguration:
      properties:
        domain:
          description: The (sub) domain to be modified
          example: kibble
          type: string
        project:
          description: The project this request is for
          example: kibble
          type: string
        source:
          description: The source of the pubsub site
          example: https://gitbox.apache.org/repos/asf/kibble-website.git
          type: string
        type:
          description: The PubSub type (git/svn) in use
          example: git
          type: string
      required:
      - domain
      - type
      - project
      - source
    QueueItem:
      properties:
        error:
          description: Optional error message if handling of a request failed
          example: Mailing list already exists!
          type: string
        handler:
          description: Host that has handled the request (when marking as complete)
          example: hermes.apache.org
          type: string
        id:
          description: The ID of the queue item
          example: abcdef67126734271
          type: string
        opts:
          description: queue options, ignored
          type: string
        payload:
          description: The queue payload, as a JSON object
          example:
            path: /var/www/flex.apache.org
            project: flex
            source: $gitbox/flex-site.git
          type: object
        por:
          description: proof-of-request. Can be a reason for the request or a vote
            link
          example: This guy is a spammer, we need to unsub him.
          type: string
        project:
          description: The project this request is for
          example: royale
          type: string
        status:
          description: When patching a request item, this denotes its status (approved,
            denied, rescheduled)
          example: approved
          type: string
        type:
          description: The type of the request (ml, pubsub, jira, confluence)
          example: pubsub
          type: string
      required: []
    QueueList:
      properties:
        requests:
          description: The list of queued items
          items:
            $ref: '#/components/schemas/QueueItem'
          type: array
      required:
      - requests
    RepositoryConfiguration:
      properties:
        commitlist:
          description: The commit list for diff emails etc
          example: commits@kibble.apache.org
          type: string
        issuelist:
          description: Optional mailing list for PR/issue notifs
          example: issues@kibble.apache.org
          type: string
        jira:
          description: JIRA settings (nocommit, worklog etc)
          example: worklog
          type: string
        project:
          description: The TLP ID
          example: kibble
          type: string
        repository:
          description: The name of the repository
          example: kibble.git
          type: string
        type:
          description: The type (svn/gitwip/gitbox) in use
          example: gitbox
          type: string
      required:
      - project
      - type
      - repository
    UserAccount:
      properties:
        displayname:
          description: A display name (e.g. full name) for the account
          example: picoAPI Guest
          type: string
        email:
          description: Desired username (email address)
          example: guest@picoapi.com
          type: string
        password:
          description: Desired password for the account
          example: picodemo
          type: string
      required:
      - email
      - password
      - displayname
  securitySchemes:
    cookieAuth:
      in: cookie
      name: aim_session
      type: apiKey
paths:
  /api/queue/list/{opts}:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueItem'
        description: Queue item to remove from queue
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Removes one or more items from the queue
    get:
      parameters:
      - description: Specific queue segment options (encrypt, current, old, all)
        in: path
        name: opts
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueList'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Returns the currently pending items in the process queue
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueItem'
        description: Texts to analyze
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Edit a queue object
    post:
      parameters:
      - description: Specific queue segment options (encrypt, current, old, all)
        in: path
        name: opts
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueList'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Returns the currently pending items in the process queue
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueItem'
        description: Texts to analyze
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionCompleted'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Adds one or more items to the queue
  /api/resources/all:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display all projects and resources you can admin
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display all projects and resources you can admin
  /api/resources/mine:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your projects and resources
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your projects and resources
  /api/resources/ml:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailingListConfiguration'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your project's mailing list configuration
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailingListConfiguration'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your project's mailing list configuration
  /api/resources/pubsub:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubSubConfiguration'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your project's pubsub configuration
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubSubConfiguration'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your project's pubsub configuration
  /api/resources/repo:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryConfiguration'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your project's repository configuration
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryConfiguration'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your project's repository configuration
  /api/session:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserData'
          description: 200 response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Display your login details
  /api/widgets/{pageid}:
    get:
      parameters:
      - description: Page ID to fetch design for
        in: path
        name: pageid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetDesign'
          description: 200 Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - cookieAuth: []
      summary: Shows the widget layout for a specific page
