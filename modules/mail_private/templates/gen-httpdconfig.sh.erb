#!/bin/bash

if [ "`/usr/bin/whoami`" != "root" ]; then
  echo "You must be root to run this script"
  exit 1;
fi

BASE=<%= @archives_www %>/mod_mbox/
PMCS_CONFIG=/etc/apache2/sites-enabled/mail-private-pmcs.include
PMCS_MACRO=/etc/apache2/sites-enabled/mail-private-pmcs.macro
COMMITTERS_CONFIG=/dev/null
COMMITTERS_MACRO=/dev/null

echo "Reading $BASE"
echo "Creating $PMCS_CONFIG and $PMCS_MACRO"

# grab all the hashes at once (ignore missing files here; it may be the first run)
SHA1_ORIGINAL="$(openssl dgst -sha1 $PMCS_MACRO $PMCS_CONFIG $COMMITTERS_MACRO $COMMITTERS_CONFIG 2>/dev/null)"

echo "## Start the per PMC config for private-arch mail access" > ${PMCS_CONFIG}
echo "## This file is automatically generated, any local changes will be lost on the next run" >> ${PMCS_CONFIG}

echo "## Start the per PMC config for private-arch mail access" > ${PMCS_MACRO}
echo "## This file is automatically generated, any local changes will be lost on the next run" >> ${PMCS_MACRO}

echo "## Start the committers config for private-arch mail access" > ${COMMITTERS_CONFIG}
echo "## This file is automatically generated, any local changes will be lost on the next run" >> ${COMMITTERS_CONFIG}

echo "## Start the committers config for private-arch mail access" > ${COMMITTERS_MACRO}
echo "## This file is automatically generated, any local changes will be lost on the next run" >> ${COMMITTERS_MACRO}

# Get a list of all the valid projects/podlings - space separated including start and finish
LDAPLIST=" $(ldapsearch -x -LLL -b ou=project,ou=groups,dc=apache,dc=org cn=* cn | sed -n -e 's/cn: //p' | xargs) "

for DIR in `ls -1 ${BASE}`; do

  case $DIR in
    incubator-*-private|incubator-*-security)
      FALLBACK='incubator'
      PMC=`echo ${DIR} | cut -f2 -d'-'`
      ;;
    *)
      FALLBACK=''
      PMC=`echo ${DIR} | cut -f1 -d'-'`
      ;;
  esac

  # This should agree with the list in update-pmc-dropdown.sh.erb
  case $PMC in
    hc)
      PMC=httpcomponents
      ;;
    empire) # hyphens are excluded above
      PMC=empire-db
      ;;
    community)
      PMC=comdev
      ;;
    travel)
      PMC=tac
      ;;
    whimsical)
      PMC=whimsy
      ;;
  esac
  echo "${DIR} : ${PMC}";

  if [[ $LDAPLIST == *" $PMC "* ]]; then
    LDAPCN=$PMC
  else
    LDAPCN=$FALLBACK
  fi

   if [ -n "${LDAPCN}" ]; then
    echo "* ${DIR}... has an LDAP CN - ${LDAPCN}";

    cat <<CONFIG >>${PMCS_CONFIG}
<LocationMatch ^/pmc/private-arch/${DIR}(.*)>
   MboxIndex On
   MboxRootPath "/pmc/private-arch/"
   MboxStyle "/assets/style.css"
   MboxScript "/assets/archives.js"
   MboxHideEmpty On
   MboxAntispam On
   <RequireAll>
     AuthType Basic
     AuthBasicProvider ldap
     AuthName "${PMC} - PMC members only."
     AuthLDAPUrl "ldaps://ldap-us-ro.apache.org:636/ou=people,dc=apache,dc=org?uid"
     AuthLDAPGroupAttribute owner
     AuthLDAPRemoteUserIsDN On
     Require ldap-group cn=${LDAPCN},ou=project,ou=groups,dc=apache,dc=org
   </RequireAll>
</LocationMatch>

CONFIG

    cat <<EOT >>${PMCS_MACRO}
Use MacroMboxPMC "${DIR}" "${PMC}" "${LDAPCN}"
EOT

  elif [ "x$DIR" = "x"committers ] || [ "x$DIR" = "x"committers-cvs ] || [ "x$DIR" = "x"infrastructure ] || [ "x$DIR" = "x"jobs ] || [ "x$DIR" = "x"site-cvs ] || [ "x$DIR" = "x"site-dev ] || [ "x$DIR" = "x"concom ]; then
    # NOTE: do not add the 's/-.*//' here; infrastructure-private@ and concom-private@ aren't committers-readable
    echo "* ${DIR}... setting access to all ASF committers"

    cat <<CONFIG >>${COMMITTERS_CONFIG}
<LocationMatch ^/committers/private-arch/${DIR}(\$|/.*)>
   MboxIndex On
   MboxRootPath "/committers/private-arch/"
   MboxStyle "/assets/style.css"
   MboxScript "/assets/archives.js"
   MboxHideEmpty On
   MboxAntispam On
   <RequireAll>
     AuthType Basic
     AuthBasicProvider ldap
     AuthName "ASF Committers only."
     AuthLDAPUrl "ldaps://ldap-us-ro.apache.org:636/ou=people,dc=apache,dc=org?uid"
     AuthLDAPGroupAttribute memberUid
     AuthLDAPRemoteUserIsDN Off
     Require ldap-group cn=committers,ou=groups,dc=apache,dc=org
   </RequireAll>
</LocationMatch>

CONFIG

    cat <<EOT >>${COMMITTERS_MACRO}
Use MacroMboxCommitters "${DIR}"
EOT

  else
    echo "* ${DIR}... I can't seem to find an LDAP PMC group, so locking the access to ASF Members only!";

    # Note: subdirs that are created later are handled by sites-enabled/mail-search.conf

    cat <<CONFIG >>${PMCS_CONFIG}
# Redirect /pmc/private-arch/${DIR} /members/private-arch/${DIR}
<LocationMatch ^/pmc/private-arch/${DIR}(.*)>
   MboxIndex On
   MboxRootPath "/pmc/private-arch/"
   MboxStyle "/assets/style.css"
   MboxScript "/assets/archives.js"
   MboxHideEmpty On
   MboxAntispam On
   <RequireAll>
     AuthType Basic
     AuthBasicProvider ldap
     AuthName "ASF Members only."
     AuthLDAPUrl "ldaps://ldap-us-ro.apache.org:636/ou=people,dc=apache,dc=org?uid"
     AuthLDAPGroupAttribute memberUid
     AuthLDAPRemoteUserIsDN Off
     Require ldap-group cn=member,ou=groups,dc=apache,dc=org
   </RequireAll>
</LocationMatch>

CONFIG

    cat <<EOT >>${PMCS_MACRO}
Use MacroMboxMembers "${DIR}"
EOT

  fi

done

# grab all the new hashes at once (don't ignore missing files)
SHA1_FINAL="$(openssl dgst -sha1 $PMCS_MACRO $PMCS_CONFIG $COMMITTERS_MACRO $COMMITTERS_CONFIG)"

echo "Original hashes:"
echo "$SHA1_ORIGINAL"

echo "Final hashes:"
echo "$SHA1_FINAL"

if [ "$SHA1_FINAL" != "$SHA1_ORIGINAL" ]
then
    echo "Restarting httpd (graceful)"
    /usr/sbin/apache2 -k graceful
else
    echo "No change to generated files"
fi

echo "All done"
