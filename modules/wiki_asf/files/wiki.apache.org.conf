##
## This file is managed by pupept and all local changes will be lost.
##

RewriteEngine on

<VirtualHost *:80>
  ServerName wiki-online.apache.org
  ServerAlias wiki.apache.org
  ServerAlias wiki-debug.apache.org
  ServerAlias wiki.*.apache.org
  ErrorLog /var/log/apache2/wiki_error_log
  DocumentRoot /var/www/html

  RewriteCond %{HTTPS} !=on
  RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]
</VirtualHost>



Listen 443

<VirtualHost *:443>
  ServerName wiki-online.apache.org
  ServerAlias wiki.apache.org
  ServerAlias wiki-debug.apache.org
  ServerAlias wiki.*.apache.org
  ErrorLog /var/log/apache2/wiki_error_log
  DocumentRoot /x1/www/wiki.apache.org/share/moin/htdocs/

  DirectoryIndex index.html index.html.var index.cgi

  SSLEngine on
  SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
  SSLCertificateFile /etc/ssl/certs/wildcard.apache.org.crt
  SSLCertificateKeyFile /etc/ssl/private/wildcard.apache.org.key

  AddHandler cgi-script .cgi
  AddHandler send-as-is asis
  AddHandler imap-file map


  # Temporarily disable all wiki access.
  #RewriteRule . /x1/www/wiki-offline/offline.asis [L]

  RewriteRule ^/wiki(.*)$ /x1/www/wiki.apache.org/share/moin/htdocs$1 [L]

  RewriteRule /moin_static(\d+)/(.*)$ /x1/www/wiki.apache.org/share/moin/htdocs/$2 [L]

  # Let robots see robots.txt
  RewriteRule ^/robots.txt$ /x1/www/wiki.apache.org/robots.txt [L]

  # Allow for things like /favicon.ico and related file-only-like stuff to resolve to the docroot
  RewriteCond /x1/www/wiki.apache.org/share/moin/htdocs/%{REQUEST_FILENAME} -f
  RewriteRule ^/(.*)$ /x1/www/wiki.apache.org/share/moin/htdocs/$1 [L]

  # Redirect in case of missing slash after wiki name
  RewriteRule ^/([^/]+)$ /$1/ [R,L]

  # Redirect to the general wiki if no wiki name was specified
  RewriteRule ^/$ /general/ [R,L]
  RewriteRule ^/moin.cgi$ /general/ [R,L]
  RewriteRule ^/moin.cgi/$ /general/ [R,L]

  #  Currently blocked awaiting clean up
  #  RewriteRule ^/mod_python /x1/www/wiki-offline/offline.asis
     RewriteRule ^/jakarta-taglibs /x1/www/wiki-offline/offline.asis
  #  RewriteRule ^/james /x1/www/wiki-offline/offline.asis
  #  RewriteRule ^/logging-log4j /x1/www/wiki-offline/offline.asis
  #  RewriteRule ^/logging-log4jcxx /x1/www/wiki-offline/offline.asis

    # projects promoted to tlp
    RewriteRule ^/cocoon-lenya(.*)$ /lenya$1 [R=301,L]
    RewriteRule ^/jakarta-(commons|hivemind|jmeter|tapestry|tomcat|turbine|velocity)(.*)$ /$1$2 [R=301,L]
    RewriteRule ^/jakarta-lucene(.*)$ /lucene-java$1 [R=301,L]
    RewriteRule ^/lucene-hadoop(.*)$ /hadoop$1 [R=301,L]

    # projects moved to cwiki
    RewriteRule ^/geronimo.* http://cwiki.apache.org/geronimo/ [R=301,L]
    RewriteRule ^/directory.* http://cwiki.apache.org/confluence/dashboard.action [R=301,L]
    RewriteRule ^/hadoop/Avro(.*) https://cwiki.apache.org/confluence/display/AVRO$1 [R=301,L]
    RewriteRule ^/hadoop/Hive/Development/ContributorsMeetings/(.+) https://cwiki.apache.org/confluence/display/Hive/Development+ContributorsMeetings+$1 [R=301,L]
    RewriteRule ^/hadoop/Hive/(AdminManual|Development|DeveloperGuide|HiveAws|IndexDev|HiveQL|LanguageManual)/(.+) https://cwiki.apache.org/confluence/display/Hive/$1+$2 [R=301,L]
    RewriteRule ^/hadoop/Hive/(.*) https://cwiki.apache.org/confluence/display/Hive/$1 [R=301,L]

    # Block abusing IPs
    RewriteMap wiki-abusers txt:/etc/apache2/wiki-abusers/wiki-abusers.txt
    RewriteCond ${wiki-abusers:%{REMOTE_ADDR}} .
    RewriteRule . /etc/apache2/wiki-abusers/abuse-asis [E=abuse:2,L]
    # Needs log level info for mod_log_debug!
    LogMessage "Abusing request blocked (wiki-abuser)" hook=handler "expr=-T reqenv('abuse')"

    # Now that we know it should be a wiki access:
    # Extract the wiki name from the URI and
    # check validity by testing directory existence
    RewriteCond /x1/www/wiki.apache.org/data/$1 -d
    RewriteRule ^/([^/]+) - [E=wiki:$1]

    # Now that we know it is a wiki access:
    # Extract the wiki name and session id
    # from the session cookie
    RewriteCond %{HTTP_COOKIE} "MOIN_SESSION_80_ROOT_([^=]+)=([^ ;]*)"
    RewriteRule . - [E=cookiewiki:%1,E=cookiesession:%2,E=cookiefound:1]

    # Check whether the cookie is for the right wiki
    # and the session files exists, so the session
    # is probably valid.
    # Note that "remember me" sessions by default never expire
    # and even expired session files need to be removed by a
    # maintenance cron job
    # Next cond disabled because broken if session cookies
    # for multiple wikis are present
    #RewriteCond expr "reqenv('wiki') == reqenv('cookiewiki')"
    RewriteCond /x1/www/wiki.apache.org/data/%{ENV:cookiewiki}/data/cache/__session__/%{ENV:cookiesession} -f
    RewriteRule . - [E=validsession:1]

    # Force login pages to use SSL.
    RewriteCond %{QUERY_STRING} action=(login|newaccount)
    RewriteCond %{HTTPS} !=on
    RewriteCond %{HTTP_HOST} (.*)
    RewriteRule ^(.*)$ https://%1$1 [R,L]

    # Only allow logged in users to attach files.
    # Retrieving via do=get and do=view is allowed.
    RewriteCond %{QUERY_STRING} action=AttachFile
    RewriteCond %{QUERY_STRING} !&do=(get|view)&
    # Disabled because broken if session cookies
    # for multiple wikis are present
    #RewriteCond %{ENV:validsession} !=1
    RewriteCond %{ENV:cookiefound} !=1
    RewriteRule . - [F,E=logit:1]

    # Block the wiki spammer for using a tell-tale User-Agent string
    RewriteCond %{HTTP_USER_AGENT} "=Mozilla/4.0 (compatible; Windows XP 5.1; MSIE 6)"
    RewriteCond %{REQUEST_METHOD} =POST
    RewriteRule . - [F]

    <Location />
        AllowMethods GET OPTIONS TRACE
    </Location>
    <If "-n reqenv('wiki')">
        AllowMethods GET OPTIONS TRACE POST
    </If>

    # This is the non-wsgi wiki access
    <IfModule !wsgi_module>
        RewriteRule ^/[^/]+(.*)$ /x1/www/wiki.apache.org/share/moin/server/moin.cgi$1
    </IfModule>
    <IfModule wsgi_module>
        WSGIDaemonProcess wiki processes=20 threads=1 maximum-requests=500 group=apwiki display-name=moinwiki
        # Temporary second process group to debug performance
        WSGIDaemonProcess wiki-debug processes=1 threads=1 maximum-requests=500 group=apwiki display-name=moinwikidebug

        # Get the process group to choose from an env var
        WSGIProcessGroup %{ENV:WSGI_PROCESS_GROUP}

        # Default value for the process group env var.
        # Can be overwritten e.g. by RewriteRule with an E= flag
        SetEnv WSGI_PROCESS_GROUP wiki

        # The first ()-group results in the first path
        # segment being put into SCRIPT_NAME and removed from PATH_INFO
        # Otherwise the wiki name ends up as part of the page name
        # and links inside the wiki have no wiki prefix set.
        WSGIScriptAliasMatch /([^/]+) /www/wiki.apache.org/share/moin/server/moin.wsgi
        WSGIApplicationGroup %{GLOBAL}
    </IfModule>

    # Choose another process group for wiki-debug
    RewriteCond %{HTTP_HOST} wiki-debug
    RewriteRule . - [E=WSGI_PROCESS_GROUP:wiki-debug]

    # Choose another process group if HTTP header "wiki-debug" is non-empty
    RewriteCond %{HTTP:wiki-debug} .
    RewriteRule . - [E=WSGI_PROCESS_GROUP:wiki-debug]

    #<Directory /x1/www/wiki.apache.org/share/moin/server>
    #    AddHandler cgi-script .cgi
    #</Directory>

    # AddHandler fcgid-script .fcg

    <IfModule mod_expires.c>
        # Add Expires headers
        # One day for the wiki static content should be OK.
        # We are not updating that frequently.
        <Directory /x1/www/wiki.apache.org/share/moin/htdocs>
            ExpiresActive On
            ExpiresDefault "access plus 1 day"
        </Directory>
    </IfModule>

    #
    # Enable Caching of all moin pages. This does mean that pages which are edited
    # will not appear modified unless someone does a "shift-refresh" or similar in
    # his/her browser
    #
    <IfModule mod_cache.c>
      <IfModule mod_disk_cache.c>

      CacheRoot /raid1/cacheroot
      CacheEnable disk /

      # A page modified 100 minutes ago will expire in 10 minutes
      CacheLastModifiedFactor .1
      # Always check again after 6 hours
      CacheMaxExpire 21600
      </IfModule>
    </IfModule>


#Add trial config options to make fcgid wait longer for replies
<IfModule !wsgi_module>
     <IfModule mod_fcgid.c>
        IPCCommTimeout  120
        IPCConnectTimeout 120
     </IfModule>
</IfModule>

</VirtualHost>
